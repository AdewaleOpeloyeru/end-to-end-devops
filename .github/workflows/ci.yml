name: Continuous Integration

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

permissions:
  security-events: write

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: fetch tokens
        id: doppler
        uses: dopplerhq/secrets-fetch-action@558a97f7f29b80c369cc89e9ecb697c7941dba87
        with:
          doppler-token: ${{ secrets.DOPPLER_TOKEN }}

      - name: setup java and maven
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: run tests
        run: mvn clean test

      - name: build and scan with sonarqube
        env:
          SONAR_TOKEN: ${{ steps.doppler.outputs.SONARQUBE_TOKEN }}
        run: |
         mvn clean package org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
         -Dsonar.java.jdkHome=${{ env.JAVA_HOME }} \
         -Dsonar.host.url=https://sonarcloud.io \
         -Dsonar.organization=adewaleopeloyeru \
         -Dsonar.projectKey=AdewaleOpeloyeru_end-to-end-devops

      - name: setup node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: install snyk cli
        run: npm install -g snyk

      - name: snyk scan
        env:
          SNYK_TOKEN: ${{ steps.doppler.outputs.SNYK_TOKEN }}
        run: snyk test --all-projects --severity-threshold=high

      - name: initialize codeql
        uses: github/codeql-action/init@v3
        with:
          languages: java
          build-mode: autobuild

      - name: perform codeql analysis
        uses: github/codeql-action/analyze@v3

  containerize:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: fetch tokens
        id: doppler
        uses: dopplerhq/secrets-fetch-action@558a97f7f29b80c369cc89e9ecb697c7941dba87
        with:
          doppler-token: ${{ secrets.DOPPLER_TOKEN }}
      
      - name: setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
      
      - name: build with maven
        run: mvn clean package -DskipTests

      - name: build docker image
        run: docker build -t sample-docker-image .

      - name: tag and push to cloudsmith
        env:
          USERNAME: adewale-opeloyeru
          PASSWORD: ${{ steps.doppler.outputs.CLOUDSMITH_TOKEN }}
        run: |
          echo ${{ env.PASSWORD }} | docker login -u ${{ env.USERNAME }} --password-stdin  docker.cloudsmith.io
          docker tag sample-docker-image:latest docker.cloudsmith.io/adewale-opeloyeru-s6dz/sample-docker-repo/sample-docker-image:latest
          docker push docker.cloudsmith.io/adewale-opeloyeru-s6dz/sample-docker-repo/sample-docker-image:latest